# docker-compose : 도커 컨테이너 관리
# docker-compose.yml : 개발용으로 사용
# docker-compose-deploy.yml : 배포용으로 사용

version: "3.11"

# docker-compose : 프론트엔드, 백엔드, DB, NginX
services:
  # 첫 번째 컨테이너 : Django
  app: # Django
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    environment: # 아래의 변수들은 .env 파일에 저장 (.env) commit 하지 않는다.
      - DB_HOST=db
      - DB_NAME=youtube
      - DB_USER=joowhi
      - DB_PASS=password123
    depends_on: # db가 없을 경우 장고가 터지는데, 이를 방지하기 위한 옵션 / db 컨테이너 실행 -> app 컨테이너 실행
      - db

  # 두 번째 컨테이너 : Portgres
  db:
    image: postgres:16-alpine
    # 데이터 저장공간(./data/db) => 마운트 시킴 => /var/lib/postgresql/data
    # docker-compose down
    # 아래의 설정을 통해서 컨테이너가 제거되어도 데이터가 보존된다. 왜? 호스트환경에 저장했기 때문에
    volumes: 
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=youtube
      - POSTGRES_USER=joowhi
      - POSTGRES_PASSWORD=password123